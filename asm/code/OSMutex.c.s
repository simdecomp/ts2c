.include "macros.inc"

.section .text, "ax"  # 0x80006940 - 0x80418B80
.global "OSInitMutex"
"OSInitMutex":
/* 803E1610 003DD2B0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 803E1614 003DD2B4  7C 08 02 A6 */	mflr r0
/* 803E1618 003DD2B8  90 01 00 14 */	stw r0, 0x14(r1)
/* 803E161C 003DD2BC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 803E1620 003DD2C0  7C 7F 1B 78 */	mr r31, r3
/* 803E1624 003DD2C4  48 00 18 59 */	bl "OSInitThreadQueue"
/* 803E1628 003DD2C8  38 00 00 00 */	li r0, 0
/* 803E162C 003DD2CC  90 1F 00 08 */	stw r0, 8(r31)
/* 803E1630 003DD2D0  90 1F 00 0C */	stw r0, 0xc(r31)
/* 803E1634 003DD2D4  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 803E1638 003DD2D8  80 01 00 14 */	lwz r0, 0x14(r1)
/* 803E163C 003DD2DC  7C 08 03 A6 */	mtlr r0
/* 803E1640 003DD2E0  38 21 00 10 */	addi r1, r1, 0x10
/* 803E1644 003DD2E4  4E 80 00 20 */	blr 

.global "OSLockMutex"
"OSLockMutex":
/* 803E1648 003DD2E8  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 803E164C 003DD2EC  7C 08 02 A6 */	mflr r0
/* 803E1650 003DD2F0  90 01 00 24 */	stw r0, 0x24(r1)
/* 803E1654 003DD2F4  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 803E1658 003DD2F8  93 C1 00 18 */	stw r30, 0x18(r1)
/* 803E165C 003DD2FC  93 A1 00 14 */	stw r29, 0x14(r1)
/* 803E1660 003DD300  93 81 00 10 */	stw r28, 0x10(r1)
/* 803E1664 003DD304  7C 7C 1B 78 */	mr r28, r3
/* 803E1668 003DD308  4B FF ED F5 */	bl "__RAS_OSDisableInterrupts_begin"
/* 803E166C 003DD30C  7C 7D 1B 78 */	mr r29, r3
/* 803E1670 003DD310  48 00 18 1D */	bl "OSGetCurrentThread"
/* 803E1674 003DD314  7C 7E 1B 78 */	mr r30, r3
/* 803E1678 003DD318  3B E0 00 00 */	li r31, 0
lbl_803E167C:
/* 803E167C 003DD31C  80 1C 00 08 */	lwz r0, 8(r28)
/* 803E1680 003DD320  2C 00 00 00 */	cmpwi r0, 0
/* 803E1684 003DD324  40 82 00 40 */	bne lbl_803E16C4
/* 803E1688 003DD328  80 7C 00 0C */	lwz r3, 0xc(r28)
/* 803E168C 003DD32C  93 DC 00 08 */	stw r30, 8(r28)
/* 803E1690 003DD330  38 03 00 01 */	addi r0, r3, 1
/* 803E1694 003DD334  90 1C 00 0C */	stw r0, 0xc(r28)
/* 803E1698 003DD338  80 7E 02 F8 */	lwz r3, 0x2f8(r30)
/* 803E169C 003DD33C  2C 03 00 00 */	cmpwi r3, 0
/* 803E16A0 003DD340  40 82 00 0C */	bne lbl_803E16AC
/* 803E16A4 003DD344  93 9E 02 F4 */	stw r28, 0x2f4(r30)
/* 803E16A8 003DD348  48 00 00 08 */	b lbl_803E16B0
lbl_803E16AC:
/* 803E16AC 003DD34C  93 83 00 10 */	stw r28, 0x10(r3)
lbl_803E16B0:
/* 803E16B0 003DD350  38 00 00 00 */	li r0, 0
/* 803E16B4 003DD354  90 7C 00 14 */	stw r3, 0x14(r28)
/* 803E16B8 003DD358  90 1C 00 10 */	stw r0, 0x10(r28)
/* 803E16BC 003DD35C  93 9E 02 F8 */	stw r28, 0x2f8(r30)
/* 803E16C0 003DD360  48 00 00 3C */	b lbl_803E16FC
lbl_803E16C4:
/* 803E16C4 003DD364  7C 00 F0 40 */	cmplw r0, r30
/* 803E16C8 003DD368  40 82 00 14 */	bne lbl_803E16DC
/* 803E16CC 003DD36C  80 7C 00 0C */	lwz r3, 0xc(r28)
/* 803E16D0 003DD370  38 03 00 01 */	addi r0, r3, 1
/* 803E16D4 003DD374  90 1C 00 0C */	stw r0, 0xc(r28)
/* 803E16D8 003DD378  48 00 00 24 */	b lbl_803E16FC
lbl_803E16DC:
/* 803E16DC 003DD37C  93 9E 02 F0 */	stw r28, 0x2f0(r30)
/* 803E16E0 003DD380  80 7C 00 08 */	lwz r3, 8(r28)
/* 803E16E4 003DD384  80 9E 02 D0 */	lwz r4, 0x2d0(r30)
/* 803E16E8 003DD388  48 00 1A 81 */	bl "__OSPromoteThread"
/* 803E16EC 003DD38C  7F 83 E3 78 */	mr r3, r28
/* 803E16F0 003DD390  48 00 26 5D */	bl "OSSleepThread"
/* 803E16F4 003DD394  93 FE 02 F0 */	stw r31, 0x2f0(r30)
/* 803E16F8 003DD398  4B FF FF 84 */	b lbl_803E167C
lbl_803E16FC:
/* 803E16FC 003DD39C  7F A3 EB 78 */	mr r3, r29
/* 803E1700 003DD3A0  4B FF ED 85 */	bl "OSRestoreInterrupts"
/* 803E1704 003DD3A4  80 01 00 24 */	lwz r0, 0x24(r1)
/* 803E1708 003DD3A8  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 803E170C 003DD3AC  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 803E1710 003DD3B0  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 803E1714 003DD3B4  83 81 00 10 */	lwz r28, 0x10(r1)
/* 803E1718 003DD3B8  7C 08 03 A6 */	mtlr r0
/* 803E171C 003DD3BC  38 21 00 20 */	addi r1, r1, 0x20
/* 803E1720 003DD3C0  4E 80 00 20 */	blr 

.global "OSUnlockMutex"
"OSUnlockMutex":
/* 803E1724 003DD3C4  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 803E1728 003DD3C8  7C 08 02 A6 */	mflr r0
/* 803E172C 003DD3CC  90 01 00 24 */	stw r0, 0x24(r1)
/* 803E1730 003DD3D0  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 803E1734 003DD3D4  93 C1 00 18 */	stw r30, 0x18(r1)
/* 803E1738 003DD3D8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 803E173C 003DD3DC  7C 7D 1B 78 */	mr r29, r3
/* 803E1740 003DD3E0  4B FF ED 1D */	bl "__RAS_OSDisableInterrupts_begin"
/* 803E1744 003DD3E4  7C 7F 1B 78 */	mr r31, r3
/* 803E1748 003DD3E8  48 00 17 45 */	bl "OSGetCurrentThread"
/* 803E174C 003DD3EC  80 1D 00 08 */	lwz r0, 8(r29)
/* 803E1750 003DD3F0  7C 7E 1B 78 */	mr r30, r3
/* 803E1754 003DD3F4  7C 00 18 40 */	cmplw r0, r3
/* 803E1758 003DD3F8  40 82 00 70 */	bne lbl_803E17C8
/* 803E175C 003DD3FC  80 1D 00 0C */	lwz r0, 0xc(r29)
/* 803E1760 003DD400  34 00 FF FF */	addic. r0, r0, -1
/* 803E1764 003DD404  90 1D 00 0C */	stw r0, 0xc(r29)
/* 803E1768 003DD408  40 82 00 60 */	bne lbl_803E17C8
/* 803E176C 003DD40C  80 9D 00 10 */	lwz r4, 0x10(r29)
/* 803E1770 003DD410  80 BD 00 14 */	lwz r5, 0x14(r29)
/* 803E1774 003DD414  2C 04 00 00 */	cmpwi r4, 0
/* 803E1778 003DD418  40 82 00 0C */	bne lbl_803E1784
/* 803E177C 003DD41C  90 A3 02 F8 */	stw r5, 0x2f8(r3)
/* 803E1780 003DD420  48 00 00 08 */	b lbl_803E1788
lbl_803E1784:
/* 803E1784 003DD424  90 A4 00 14 */	stw r5, 0x14(r4)
lbl_803E1788:
/* 803E1788 003DD428  2C 05 00 00 */	cmpwi r5, 0
/* 803E178C 003DD42C  40 82 00 0C */	bne lbl_803E1798
/* 803E1790 003DD430  90 83 02 F4 */	stw r4, 0x2f4(r3)
/* 803E1794 003DD434  48 00 00 08 */	b lbl_803E179C
lbl_803E1798:
/* 803E1798 003DD438  90 85 00 10 */	stw r4, 0x10(r5)
lbl_803E179C:
/* 803E179C 003DD43C  38 00 00 00 */	li r0, 0
/* 803E17A0 003DD440  90 1D 00 08 */	stw r0, 8(r29)
/* 803E17A4 003DD444  80 83 02 D0 */	lwz r4, 0x2d0(r3)
/* 803E17A8 003DD448  80 03 02 D4 */	lwz r0, 0x2d4(r3)
/* 803E17AC 003DD44C  7C 04 00 00 */	cmpw r4, r0
/* 803E17B0 003DD450  40 80 00 10 */	bge lbl_803E17C0
/* 803E17B4 003DD454  7F C3 F3 78 */	mr r3, r30
/* 803E17B8 003DD458  48 00 17 C1 */	bl "__OSGetEffectivePriority"
/* 803E17BC 003DD45C  90 7E 02 D0 */	stw r3, 0x2d0(r30)
lbl_803E17C0:
/* 803E17C0 003DD460  7F A3 EB 78 */	mr r3, r29
/* 803E17C4 003DD464  48 00 26 75 */	bl "OSWakeupThread"
lbl_803E17C8:
/* 803E17C8 003DD468  7F E3 FB 78 */	mr r3, r31
/* 803E17CC 003DD46C  4B FF EC B9 */	bl "OSRestoreInterrupts"
/* 803E17D0 003DD470  80 01 00 24 */	lwz r0, 0x24(r1)
/* 803E17D4 003DD474  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 803E17D8 003DD478  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 803E17DC 003DD47C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 803E17E0 003DD480  7C 08 03 A6 */	mtlr r0
/* 803E17E4 003DD484  38 21 00 20 */	addi r1, r1, 0x20
/* 803E17E8 003DD488  4E 80 00 20 */	blr 

.global "__OSUnlockAllMutex"
"__OSUnlockAllMutex":
/* 803E17EC 003DD48C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 803E17F0 003DD490  7C 08 02 A6 */	mflr r0
/* 803E17F4 003DD494  90 01 00 14 */	stw r0, 0x14(r1)
/* 803E17F8 003DD498  93 E1 00 0C */	stw r31, 0xc(r1)
/* 803E17FC 003DD49C  3B E0 00 00 */	li r31, 0
/* 803E1800 003DD4A0  93 C1 00 08 */	stw r30, 8(r1)
/* 803E1804 003DD4A4  7C 7E 1B 78 */	mr r30, r3
/* 803E1808 003DD4A8  48 00 00 2C */	b lbl_803E1834
lbl_803E180C:
/* 803E180C 003DD4AC  80 83 00 10 */	lwz r4, 0x10(r3)
/* 803E1810 003DD4B0  2C 04 00 00 */	cmpwi r4, 0
/* 803E1814 003DD4B4  40 82 00 0C */	bne lbl_803E1820
/* 803E1818 003DD4B8  93 FE 02 F8 */	stw r31, 0x2f8(r30)
/* 803E181C 003DD4BC  48 00 00 08 */	b lbl_803E1824
lbl_803E1820:
/* 803E1820 003DD4C0  93 E4 00 14 */	stw r31, 0x14(r4)
lbl_803E1824:
/* 803E1824 003DD4C4  90 9E 02 F4 */	stw r4, 0x2f4(r30)
/* 803E1828 003DD4C8  93 E3 00 0C */	stw r31, 0xc(r3)
/* 803E182C 003DD4CC  93 E3 00 08 */	stw r31, 8(r3)
/* 803E1830 003DD4D0  48 00 26 09 */	bl "OSWakeupThread"
lbl_803E1834:
/* 803E1834 003DD4D4  80 7E 02 F4 */	lwz r3, 0x2f4(r30)
/* 803E1838 003DD4D8  2C 03 00 00 */	cmpwi r3, 0
/* 803E183C 003DD4DC  40 82 FF D0 */	bne lbl_803E180C
/* 803E1840 003DD4E0  80 01 00 14 */	lwz r0, 0x14(r1)
/* 803E1844 003DD4E4  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 803E1848 003DD4E8  83 C1 00 08 */	lwz r30, 8(r1)
/* 803E184C 003DD4EC  7C 08 03 A6 */	mtlr r0
/* 803E1850 003DD4F0  38 21 00 10 */	addi r1, r1, 0x10
/* 803E1854 003DD4F4  4E 80 00 20 */	blr 
